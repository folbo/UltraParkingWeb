@model string

@{
    ViewBag.Title = "Index";
}

<style>
    .mock-parking-item {
        background: #6ff379;
        margin-bottom: 20px;
        position: relative;
        padding: 2px;
        min-height: 235px;
    }
    .parking-list-item {
        background: #3cb371;
        margin-bottom: 2px;
        position: relative;
        padding: 2px;
    }
    .parking-list-item .title-bar {
        min-height: 35px;
    }
    .expanded-content {
    }
    .expanded-map {
        width: 300px;
        height: 300px;
        background: #ffffff;
    }
</style>

<h2>Index</h2>
<div id="parking-list">
    <button class="btn btn-info" data-target="#myModal" data-toggle="modal">Create</button>

    <div style="margin-top: 20px" data-bind="foreach: parkings">
        <div class="parking-list-item">
            <div class="title-bar">
                <span data-bind="text: Name"></span>
                <a href="#" data-bind="click: $parent.expandedId() != Id() ? $parent.expand : $parent.collapse"><i data-bind="css: {'fa-chevron-circle-down': $parent.expandedId() != Id(), 'fa-chevron-circle-up': $parent.expandedId() == Id() }" class="fa" style="font-size: 22px"></i></a>
                <span style="float: right">
                    <button class="btn">Edytuj</button>
                    <button class="btn">Usuń</button>
                </span>
            </div>
            <div class="expanded-content" data-bind="visible: $parent.expandedId() == Id()">
                Wszystkich miejsc: <span data-bind="text: TotalPlaces"></span>
                <input class="form-control" type="text" data-bind="value: $parent.edPlaces"/>
                @*<button data-bind="click: $parent.addPlacesArea" class="btn">Updatuj</button>*@
                <div class="expanded-map">
                    mapa
                </div>
            </div>
        </div>
    </div>

    @*todo: binding knockouta działa tylko wewnątrz górnego diva, bo koliduje z logowaniem*@
    <div id="myModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Nowy parking</h4>
                </div>
                <div class="modal-body">
                    <p>
                        Nazwa parkingu: <input type="text" class="form-control" data-bind="value: crName"/>
                    </p>
                    <div data-bind="foreach: places">
                        <div class="form-inline">
                            <input type="text" size="4" class="form-control" data-bind="value: NamePrefix" placeholder="prefix" />
                            <div class="form-group">
                                <input type="text" size="4" class="form-control" data-bind="value: StartNumber" placeholder="0" /><br />
                                <input type="text" size="4" class="form-control" data-bind="value: Amount" placeholder="100" /><br />
                            </div>
                            <input type="text" size="4" class="form-control" data-bind="value: NameSuffix" placeholder="suffix" />
                            <button class="btn btn-danger btn-rem" type="button" data-bind="click: $parent.removePlacesArea">
                                <span class="glyphicon glyphicon-minus"></span>
                            </button>
                        </div>
                    </div>
                    <div class="form-inline">
                        <input type="text" size="4" class="form-control" data-bind="value: crNamePrefix" placeholder="prefix"/>
                        <div class="form-group">
                            <input type="text" size="4" class="form-control" data-bind="value: crStartNumber" placeholder="0"/><br />
                            <input type="text" size="4" class="form-control" data-bind="value: crPlacesAmount" placeholder="100"/><br />
                        </div>
                        <input type="text" size="4" class="form-control" data-bind="value: crNameSuffix" placeholder="suffix" />
                        <button class="btn btn-success btn-add" type="button" data-bind="click: addPlacesArea">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" data-bind="click: create">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div> 

@section Scripts
{
    <script src="~/Content/ko/bindings/knockout-repeat.js"></script>

    <script>
        ParkingsViewModel = function(json, urls) {
            var self = this;

            //fields
            self.parkings = ko.observableArray(json.parkings);

            self.creating = ko.observable(false);
            self.crName = ko.observable();
            self.crPlacesAmount = ko.observable();
            self.crStartNumber = ko.observable();
            self.crNamePrefix = ko.observable();
            self.crNameSuffix = ko.observable();
            self.places = ko.observableArray([]);

            self.expandedId = ko.observable(0);
            self.edPlaces = ko.observable();

            //methods
            self.create = function() {
                var newParking = new Parking({ Name: self.crName(), PlacesAreas: self.places() });
                self.creating(true);
                console.log(ko.toJSON(self.places()));
                console.log(ko.toJSON(newParking));
                Ultra.postJson(urls.createParking, ko.toJS(newParking), "Parking dodany")
                    .success(function(response) {
                        //self.parkings.push(new Parking(response));
                        self.creating(false);
                        document.location.reload();
                    });
            }

            self.expand = function(parking) {
                self.expandedId(parking.Id());
            }

            self.collapse = function() {
                self.expandedId(0);
            }

            self.addPlacesArea = function() {
                self.places.push(new PlacesArea({ Amount: self.crPlacesAmount(), StartNumber: self.crStartNumber(), NamePrefix: self.crNamePrefix(), NameSuffix: self.crNameSuffix() }));
                self.crPlacesAmount("");
                self.crNamePrefix("");
                self.crNameSuffix("");
                self.crStartNumber("");
            }
            self.removePlacesArea = function(a) {
                self.places.pop(a);
            }
        }

        function Parking(p) {
            var self = this;

            self.Name = ko.observable(p.Name);
            self.TotalPlaces = ko.observable(p.TotalPlaces);
            self.Id = ko.observable(p.Id);
            self.PlacesAreas = ko.observableArray(p.PlacesAreas);
        }

        function PlacesArea(p) {
            var self = this;

            self.StartNumber = ko.observable(p.StartNumber);
            self.NamePrefix = ko.observable(p.NamePrefix);
            self.NameSuffix = ko.observable(p.NameSuffix);
            self.Amount = ko.observable(p.Amount);
        }

        var urls = {
            createParking: "/ParkingList/CreateParking",
            resizeParking: "/ParkingList/ResizeParking"
        }

        //zrob observable z pól Parkingu
        var mappedParkings = $.map(@Html.Raw(@Model), function(item) {
            return new Parking(item);
        });

        ko.applyBindings(new ParkingsViewModel({parkings: mappedParkings}, urls), document.getElementById("parking-list"));
    </script>
}
